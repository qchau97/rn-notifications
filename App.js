import React, { useEffect } from 'react';
import { Button, View, StyleSheet, Alert } from 'react-native';
import AsyncStorage from '@react-native-async-storage/async-storage';
import { Notifications } from 'react-native-notifications';
import firebase from 'react-native-firebase';
import messaging from '@react-native-firebase/messaging';

const App = () => {
  const requestPermission = async () => {
    try {
      await firebase.messaging().requestPermission();
    } catch (error) {
      console.log('Permission Rejected: ', error);
    }
  };

  const getFcmToken = async () => {
    let fcmToken = await AsyncStorage.getItem('fcmToken');
    if (!fcmToken) {
      fcmToken = await firebase.messaging().getToken();
      if (fcmToken) {
        await AsyncStorage.setItem('fcmToken', fcmToken);
      }
    }
  };

  const checkPermission = async () => {
    const enabled = await firebase.messaging().hasPermission();
    console.log(enabled);
    if (enabled) {
      getFcmToken();
    } else {
      requestPermission();
    }
  };

  useEffect(() => {
    checkPermission();
    messaging().onMessage(remoteMessage => {
      Alert.alert(
        remoteMessage.notification.title,
        remoteMessage.notification.body,
        [
          { text: "OK", onPress: () => console.log("OK Pressed") }
        ],
        { cancelable: true }
      );
    });
    // const foregroundSubscription = Notifications.events().registerNotificationReceivedForeground(notification => console.log(notification));
    // const backgroundSubscription = Notifications.events().registerNotificationReceivedBackground(notification => console.log('huhuhuh', notification));

    // return () => {
    //   foregroundSubscription.remove();
    //   backgroundSubscription.remove();
    // }
  }, []);

  const handleLocalNotificationTrigger = async () => {
    Notifications.postLocalNotification({
      title: "Local notification",
      body: "This notification was generated by the app!",
      extra: "data"
    });
  };

  return (
    <View style={styles.container}>
      <Button
        title='Trigger Local Notification'
        onPress={handleLocalNotificationTrigger}
      />
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#ccc',
  }
});
export default App;
